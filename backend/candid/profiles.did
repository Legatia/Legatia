type Profile = record {
  name: text;
  sex: text;
  birthday: text;
  birthplace: text;
  photo: vec nat8;
};

service : {
  create_profile: (Profile) -> (variant { Ok; Err: text });
  read_profile: (principal) -> (variant { Ok: Profile; Err: text });
  get_own_profile: () -> (variant { Ok: Profile; Err: text });
  update_profile: (Profile) -> (variant { Ok; Err: text });
  generate_linking_code: () -> (variant { Ok: text; Err: text });
  link_device: (text) -> (variant { Ok; Err: text });
  unlink_device: (principal) -> (variant { Ok; Err: text });
  update_profile_from_ghost: (principal, Profile) -> (variant { Ok; Err: text });
  is_registered_user: (principal) -> (bool);
  get_linked_principals: () -> (variant { Ok: vec principal; Err: text });
}